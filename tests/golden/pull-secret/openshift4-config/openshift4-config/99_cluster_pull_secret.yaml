apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '-10'
  labels:
    name: syn-cluster-pull-secret-manager
  name: syn-cluster-pull-secret-manager
  namespace: openshift-config
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '-10'
  labels:
    name: syn-cluster-pull-secret-manager
  name: syn-cluster-pull-secret-manager
rules:
  - apiGroups:
      - ''
    resourceNames:
      - pull-secret
    resources:
      - secrets
    verbs:
      - get
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '-10'
  labels:
    name: syn-cluster-pull-secret-manager
  name: syn-cluster-pull-secret-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: syn-cluster-pull-secret-manager
subjects:
  - kind: ServiceAccount
    name: syn-cluster-pull-secret-manager
    namespace: openshift-config
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: '-9'
  labels:
    name: syn-unmanage-cluster-pull-secret
  name: syn-unmanage-cluster-pull-secret
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        name: syn-unmanage-cluster-pull-secret
    spec:
      containers:
        - command:
            - bash
            - -ce
            - kubectl label secret pull-secret argocd.argoproj.io/instance-;kubectl
              annotate secret pull-secret kubectl.kubernetes.io/last-applied-configuration-;kubectl
              annotate secret pull-secret argocd.argoproj.io/sync-options-;
          image: docker.io/bitnami/kubectl:1.32.2
          name: clean
      imagePullSecrets: []
      initContainers: []
      restartPolicy: OnFailure
      serviceAccountName: syn-cluster-pull-secret-manager
      terminationGracePeriodSeconds: 30
      volumes: []
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  annotations: {}
  labels:
    name: syn-update-cluster-pull-secret-script
  name: syn-update-cluster-pull-secret-script
stringData:
  sync-secret.sh: |
    #!/bin/bash
    set -eu

    pull_secret=$(
        kubectl get secret pull-secret \
        -o go-template='{{index .data ".dockerconfigjson"|base64decode}}'
    )
    patched_secret=$(
      jq -cr '.auths."ghcr.io"={"auth": "t-silent-test-1234/c-green-test-1234/openshift4-config/pullSecrets/ghcr.io-pull-secret", "email": "github@example.com"} |.auths."quay.io"=null |del(..|nulls)|@base64' <<<"${pull_secret}"
    )
    kubectl -n openshift-config patch secret pull-secret \
      -p "{\"data\": {\".dockerconfigjson\": \"$patched_secret\"}}"
type: Opaque
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: '10'
  labels:
    name: syn-update-cluster-pull-secret
  name: syn-update-cluster-pull-secret
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        name: syn-update-cluster-pull-secret
    spec:
      containers:
        - args: []
          command:
            - /script/sync-secret.sh
          env: []
          image: docker.io/bitnami/kubectl:1.32.2
          imagePullPolicy: IfNotPresent
          name: update
          ports: []
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /script
              name: script
      imagePullSecrets: []
      initContainers: []
      restartPolicy: OnFailure
      serviceAccountName: syn-cluster-pull-secret-manager
      terminationGracePeriodSeconds: 30
      volumes:
        - name: script
          secret:
            defaultMode: 504
            secretName: syn-update-cluster-pull-secret-script
